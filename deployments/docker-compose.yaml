services:
  auth:
    build:
      context: ..
      dockerfile: ./build/Dockerfile
      target: dev
    depends_on:
      db:
        condition: service_healthy
    environment:
      MAILER_HOST: mailhog
      MAILER_USERNAME: ${SMTP_USERNAME}
      MAILER_PASSWORD: ${SMTP_PASSWORD}
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    ports:
      - "50051:50051"
    volumes:
      - ..:/app
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_PORT: ${DB_PORT:-5432}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
  migrations:
    image: ghcr.io/kukymbr/goose-docker:3.24.2
    restart: no
    depends_on:
      db:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=db port=${DB_PORT:-5432} user=${DB_USER:-postgres} password=${DB_PASSWORD:-postgres} dbname=${DB_NAME:-postgres}
      - GOOSE_VERBOSE=false
    volumes:
      - ../migrations:/migrations
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"

volumes:
  pg_data: